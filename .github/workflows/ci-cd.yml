name: CI/CD com Docker Compose e Cloud Run

on:
  push:
    branches:
      - homolog
      - main
    tags:
      - 'v*.*.*'

jobs:
  build:
    name: ⚙️ Build & Push
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    env:
      PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      REGION: southamerica-east1
      SERVICE: tormentator-front
    steps:
      - uses: actions/checkout@v4
      - name: Autenticar no GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      - name: Configurar gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
      - run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev
      - name: Definir REPO
        run: echo "REPO=${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/tormentator-front/${{ env.SERVICE }}" >> $GITHUB_ENV
      - name: Build via Docker Compose
        run: docker compose -f docker-compose.yaml build
      - name: Taggear e enviar imagem
        run: |
          if [[ "${{ github.ref_name }}" == "homolog" ]]; then
            TAG="homolog"
          elif [[ "${{ github.ref_name }}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            TAG="${{ github.ref_name }}"
          else
            TAG="latest"
          fi
          echo "TAG=$TAG" >> $GITHUB_ENV
          docker tag tormentator-front:latest $REPO:$TAG
          docker push $REPO:$TAG
          echo "$TAG" > tag.txt
      - uses: actions/upload-artifact@v4
        with:
          name: image-tag
          path: tag.txt

  deploy-homolog:
    name: 🧪 Deploy Homolog
    runs-on: ubuntu-latest
    needs: build
    if: github.ref_name == 'homolog'
    env:
      PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      REGION: southamerica-east1
      SERVICE: tormentator-front
    steps:
      - uses: actions/download-artifact@v4
        with: { name: image-tag }
      - name: Definir REPO
        run: echo "REPO=${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/tormentator-front/${{ env.SERVICE }}" >> $GITHUB_ENV
      - name: Obter TAG
        run: echo "TAG=$(cat tag.txt)" >> $GITHUB_ENV
      - uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      - uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
      - uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.SERVICE }}
          image: ${{ env.REPO }}:${{ env.TAG }}
          region: ${{ env.REGION }}
          flags: --allow-unauthenticated

  deploy-prod:
    name: 🚀 Deploy Produção
    runs-on: ubuntu-latest
    needs: build
    if: github.ref_name == 'main' || startsWith(github.ref, 'refs/tags/v')
    environment: production
    permissions:
      contents: read
      id-token: write
    env:
      PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      REGION: southamerica-east1
      SERVICE: tormentator-front
    steps:
      - uses: actions/download-artifact@v4
        with: { name: image-tag }
      - name: Definir REPO
        run: echo "REPO=${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/tormentator-front/${{ env.SERVICE }}" >> $GITHUB_ENV
      - name: Obter TAG
        run: echo "TAG=$(cat tag.txt)" >> $GITHUB_ENV
      - uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      - uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
      - uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.SERVICE }}
          image: ${{ env.REPO }}:${{ env.TAG }}
          region: ${{ env.REGION }}
          flags: --allow-unauthenticated
